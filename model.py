import numpy as np 

def solve_model(T,state):
    ZERO, A1, A0, B1, B0, POFAS00, POFAS01, POA10, POFAS10, POFAC10, O110, O210, O310, POA11, POFAS11, POFAC11, O111, O211, O311 = state
    dZERO = -ZERO*0
    dA1 = -A1*0
    dA0 = -A0*0
    dB1 = -B1*0
    dB0 = -B0*0
    dPOFAS00 = -POFAS00*0.1+10*(((A0/5)**2)*((B0/5)**2))/(1+((A0/5)**2)+((B0/5)**2)+((A0/5)**2)*((B0/5)**2))
    dPOFAS01 = -POFAS01*0.1+10*(((A1/5)**2)*((B0/5)**2))/(1+((A1/5)**2)+((B0/5)**2)+((A1/5)**2)*((B0/5)**2))
    dPOA10 = -POA10*0.1+10*(((A0/5)**2)*((B1/5)**2))/(1+((A0/5)**2)+((B1/5)**2)+((A0/5)**2)*((B1/5)**2))
    dPOFAS10 = -POFAS10*0.1+10*(((ZERO/5)**3))/(1+((O110/5)**2)+((ZERO/5)**3)+((O110/5)**2)*((ZERO/5)**3))+10*(((O110/5)**2))/(1+((O110/5)**2)+((ZERO/5)**3)+((O110/5)**2)*((ZERO/5)**3))
    dPOFAC10 = -POFAC10*0.1+10*(((O210/5)**2)+((O310/5)**3)+((O210/5)**2)*((O310/5)**3))/(1+((O210/5)**2)+((O310/5)**3)+((O210/5)**2)*((O310/5)**3))
    dO110 = -O110*0.1+10*(((POA10/5)**3))/(1+((POFAS01/5)**2)+((POA10/5)**3)+((POFAS01/5)**2)*((POA10/5)**3))+10*(((POFAS01/5)**2))/(1+((POFAS01/5)**2)+((POA10/5)**3)+((POFAS01/5)**2)*((POA10/5)**3))
    dO210 = -O210*0.1+10*(((O110/5)**2)*((ZERO/5)**3))/(1+((O110/5)**2)+((ZERO/5)**3)+((O110/5)**2)*((ZERO/5)**3))
    dO310 = -O310*0.1+10*(((POFAS01/5)**2)*((POA10/5)**3))/(1+((POFAS01/5)**2)+((POA10/5)**3)+((POFAS01/5)**2)*((POA10/5)**3))
    dPOA11 = -POA11*0.1+10*(((A1/5)**2)*((B1/5)**2))/(1+((A1/5)**2)+((B1/5)**2)+((A1/5)**2)*((B1/5)**2))
    dPOFAS11 = -POFAS11*0.1+10*(((POFAC10/5)**3))/(1+((O111/5)**2)+((POFAC10/5)**3)+((O111/5)**2)*((POFAC10/5)**3))+10*(((O111/5)**2))/(1+((O111/5)**2)+((POFAC10/5)**3)+((O111/5)**2)*((POFAC10/5)**3))
    dPOFAC11 = -POFAC11*0.1+10*(((O211/5)**2)+((O311/5)**3)+((O211/5)**2)*((O311/5)**3))/(1+((O211/5)**2)+((O311/5)**3)+((O211/5)**2)*((O311/5)**3))
    dO111 = -O111*0.1+10*(((POA11/5)**3))/(1+((ZERO/5)**2)+((POA11/5)**3)+((ZERO/5)**2)*((POA11/5)**3))+10*(((ZERO/5)**2))/(1+((ZERO/5)**2)+((POA11/5)**3)+((ZERO/5)**2)*((POA11/5)**3))
    dO211 = -O211*0.1+10*(((O111/5)**2)*((POFAC10/5)**3))/(1+((O111/5)**2)+((POFAC10/5)**3)+((O111/5)**2)*((POFAC10/5)**3))
    dO311 = -O311*0.1+10*(((ZERO/5)**2)*((POA11/5)**3))/(1+((ZERO/5)**2)+((POA11/5)**3)+((ZERO/5)**2)*((POA11/5)**3))
    return np.array([dZERO, dA1, dA0, dB1, dB0, dPOFAS00, dPOFAS01, dPOA10, dPOFAS10, dPOFAC10, dO110, dO210, dO310, dPOA11, dPOFAS11, dPOFAC11, dO111, dO211, dO311])

def solve_model_steady(state):
    return solve_model(0, state)
